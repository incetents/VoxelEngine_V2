// Copyright(c) 2019 Emmanuel Lajeunesse

#Name { error }

#Include
{
	_Core.glsl
}

#Attributes
{
	vec3 m_position 	: 0
	vec2 m_uv 			: 1
	mat4 instanceMatrix : 8
}

#Link
{
	vec3 pos;
	vec2 uv;
}

#RenderTargets
{
	vec4 output_albedo 		: 0
}

#Vertex
{
	// Model
	if(VXL_useModel)
	{
		if(VXL_useInstancing)
		{
			gl_Position = VXL_mvp * instanceMatrix * vec4(m_position, 1.0); 
			vert_out.pos = vec3(VXL_model * instanceMatrix * vec4(m_position, 1.0));
		}
		else
		{
			gl_Position = VXL_mvp * vec4(m_position, 1.0); 
			vert_out.pos = vec3(VXL_model * vec4(m_position, 1.0));
		}
	}
	// Passthrough
	else
	{
		gl_Position = VXL_viewProjection * vec4(m_position, 1.0); 
		vert_out.pos = m_position;
	}
	
	// Constants
	vert_out.uv = m_uv;
}

#Fragment
{
	vec4 clipSpacePos = VXL_viewProjection * vec4(frag_in.pos, 1.0);
	vec3 ndcSpacePos = clipSpacePos.xyz / clipSpacePos.w;
	vec2 windowSpacePos = ((ndcSpacePos.xy + 1.0) / 2.0);
	vec2 pixelPos = floor(windowSpacePos * VXL_viewportSize / 10.0);
	
	if(mod(pixelPos.x + pixelPos.y, 2) == 0)
		output_albedo = vec4(0.1 * frag_in.uv.x, 0, 0.1 * frag_in.uv.y,1);
	else
		output_albedo = vec4(0.5 * frag_in.uv.x, 0, 0.5 * frag_in.uv.y,1);
	
}
